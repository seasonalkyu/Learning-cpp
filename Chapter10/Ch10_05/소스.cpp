#include "Worker.h"


int main()
{
	Worker().doSomething();
	return 0;
}

// 의존 관계
// 서로 간의 연결 관계가 거의 약하다


// timer class 정보를 worker 클래스가 모르더라도 위 코드처럼 이용할 수 있다
// 구성,집합,연계 관계에서는 헤더파일에서 다른 클래스에 대해서 알아야 했다. member variable로 갖고 있기 때문에.
// 하지만 의존 관계에서는 도구로만 쓸 뿐 멤버로 가지지 않는 경우가 대부분이다
// 
// 의존관계
// 다른 클래스에도 속할 수 있는가? Yes :: 다른 클래스도 같은 도구를 이용할 수 있다
// 멤버의 존재를 클래스가 관리하는가? Yes :: 멤버로서 존재하지 않는 경우가 대부분이지만 클래스가 도구를 관리하는 측면이 있다
// 방향성은 단방향: worker는 timer 클래스의 정보를 알 필요가 없다